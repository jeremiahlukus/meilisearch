# application name
application: meilisearch

common:
  region: us-east-1
  phoenix_mode: true
  solution_stack_name: 64bit Amazon Linux 2 v3.2.3 running ECS
  strategy: blue-green
  blue_green_terminate_inactive: true
  blue_green_terminate_inactive_wait: 120

  smoke_test: |
    curl_http_code = "curl -s -o /staging/null -w \"%{http_code}\" http://#{host_name}"
    Timeout.timeout(600) do
      until ['200', '301', '302'].include?(`#{curl_http_code}`.strip)
        sleep 5
      end
    end

  option_settings:
    - namespace: aws:elasticbeanstalk:command
      option_name: Timeout
      value: "1500"
    - namespace: aws:autoscaling:launchconfiguration
      option_name: RootVolumeType
      value: gp3
    - namespace: aws:autoscaling:launchconfiguration
      option_name: RootVolumeIOPS
      value: "3000"
    - namespace: aws:autoscaling:launchconfiguration
      option_name: RootVolumeSize
      value: "16"

    - namespace: aws:autoscaling:asg
      option_name: Cooldown
      value: "1200"
    - namespace: aws:elasticbeanstalk:healthreporting:system
      option_name: SystemType
      value: enhanced
    - namespace: aws:elasticbeanstalk:healthreporting:system
      option_name: EnhancedHealthAuthEnabled
      value: "true"
    - namespace: aws:autoscaling:launchconfiguration
      option_name: InstanceType
      value:  m5.large
    - namespace: aws:autoscaling:launchconfiguration
      option_name: IamInstanceProfile
      value: aws-elasticbeanstalk-ec2-role

    - namespace: aws:elasticbeanstalk:application:environment
      option_name: MEILI_HTTP_ADDR
      value: "0.0.0.0:80"

    - namespace: aws:elasticbeanstalk:application:environment
      option_name: MEILI_ENV
      value: <%= ENV['MEILI_ENV'] %>
    - namespace: aws:elasticbeanstalk:application:environment
      option_name: MEILI_MASTER_KEY
      value: <%= ENV['MEILI_MASTER_KEY'] %>
    - namespace: aws:elasticbeanstalk:application:environment
      option_name: CNAME
      value: <%= ENV['CNAME'] %>
    - namespace: aws:elasticbeanstalk:application
      option_name: Application Healthcheck URL
      value: '/health'



  resources:
     template: config/cf_resources.json
     inputs:
       CnamePrefix: "meilisearch-<%= ENV['RAILS_ENV'] %>"

# You can define environment here. Each environment can overriden any common settings
environments:
  staging:
    # example for overriding common settings
    # strategy: inplace-update
  production:
    option_settings:

